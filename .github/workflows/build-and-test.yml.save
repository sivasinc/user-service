«ˇname: Build and Test Pipeline

# When to run this pipeline
on:
  push:
    branches: [ main, develop, feature/** ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:  # Allows manual trigger from GitHub UI

# Environment variables used across all jobs
env:
  JAVA_VERSION: "21"
  MAVEN_OPTS: '-Xmx1024m'

jobs:
  
  # ==========================================
  # JOB 1: CODE QUALITY CHECKS
  # ==========================================
  code-quality:
    name: Code Quality & Security Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Full history for better analysis
      
      - name: 🔧 Setup JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: 'maven'
      
      - name: 🔍 Validate Maven POM
        run: mvn validate
      
      - name: 🎨 Run Checkstyle
        run: mvn checkstyle:check
        continue-on-error: true
      
      - name: 🛡️ OWASP Dependency Check
        run: |
          mvn org.owasp:dependency-check-maven:check \
            -DfailBuildOnCVSS=8 \
            -DskipTestScope=true
        continue-on-error: true
      
      - name: 📤 Upload OWASP Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: owasp-dependency-check-report
          path: target/dependency-check-report.html
          retention-days: 30
      
      - name: 🔒 Trivy Filesystem Scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
        continue-on-error: true
      
      - name: 📤 Upload Trivy Results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
  
  # ==========================================
  # JOB 2: BUILD APPLICATION
  # ==========================================
  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: code-quality  # Only run if code quality passes
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
      
      - name: 🔧 Setup JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: 'maven'
      
      - name: 🔨 Compile Source Code
        run: mvn clean compile -B
      
      - name: 📦 Package Application
        run: mvn package -DskipTests -B
      
      - name: 📤 Upload JAR Artifact
        uses: actions/upload-artifact@v4
        with:
          name: application-jar
          path: target/*.jar
          retention-days: 7
      
      - name: 📊 Display Build Info
        run: |
          echo "Build Information:"
          echo "=================="
          ls -lh target/*.jar
          echo ""
          echo "JAR Details:"
          jar -tf target/*.jar | head -20
  
  # ==========================================
  # JOB 3: UNIT TESTS
  # ==========================================
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
      
      - name: 🔧 Setup JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: 'maven'
      
      - name: 🧪 Run Unit Tests
        run: mvn test -B
      
      - name: 📊 Generate Test Report
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: Unit Test Results
          path: target/surefire-reports/*.xml
          reporter: java-junit
          fail-on-error: false
      
      - name: 📤 Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-results
          path: |
            target/surefire-reports/
            target/site/jacoco/
          retention-days: 30
  
  # ==========================================
  # JOB 4: INTEGRATION TESTS
  # ==========================================
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: build
    
    # PostgreSQL service container for tests
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4
      
      - name: 🔧 Setup JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: 'maven'
      
      - name: 🔗 Run Integration Tests
        run: mvn verify -DskipUnitTests -B
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/testdb
          SPRING_DATASOURCE_USERNAME: test
          SPRING_DATASOURCE_PASSWORD: test
      
      - name: 📊 Generate Integration Test Report
        if: always()
        uses: dorny/test-reporter@v1
        with:
          name: Integration Test Results
          path: target/failsafe-reports/*.xml
          reporter: java-junit
          fail-on-error: false
      
      - name: 📤 Upload Integration Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-results
          path: target/failsafe-reports/
          retenti
