Ô¨Çname: Build, Test & Quality Analysis

on:
  push:
    branches: [ main, develop, feature/** ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

# Required permissions for security scanning
permissions:
  contents: read
  security-events: write
  actions: read
  checks: write
  pull-requests: write
  statuses: write

env:
  JAVA_VERSION: '21'
  MAVEN_OPTS: '-Xmx1024m'

jobs:
  
  # ==========================================
  # JOB 1: CODE QUALITY & SECURITY
  # ==========================================
  code-quality:
    name: Code Quality & Security Analysis
    runs-on: ubuntu-latest
    
    steps:
      - name: üì• Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: üîß Setup JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: 'maven'
      
      - name: üîç Validate Maven POM
        run: mvn validate
      
      - name: üõ°Ô∏è OWASP Dependency Check
        run: |
          mvn org.owasp:dependency-check-maven:check \
            -DfailBuildOnCVSS=8 \
            -DskipTestScope=true
        continue-on-error: true
      
      - name: üì§ Upload OWASP Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: owasp-dependency-check-report
          path: target/dependency-check-report.html
          retention-days: 30
      
      - name: üîí Trivy Filesystem Scan
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
        continue-on-error: true
      
      - name: üì§ Upload Trivy Results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'
        continue-on-error: true
  
  # ==========================================
  # JOB 2: BUILD & UNIT TESTS
  # ==========================================
  build-and-test:
    name: Build & Unit Tests
    runs-on: ubuntu-latest
    needs: code-quality
    
    steps:
      - name: üì• Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: üîß Setup JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: 'maven'
      
      - name: üî® Build and Run Unit Tests
        run: mvn clean test -B -Dspring.profiles.active=test
      
      - name: ‚úÖ Verify Test Success
        if: success()
        run: |
          echo "================================"
          echo "‚úÖ All unit tests passed successfully!"
          echo "================================"
      
      - name: üìä Generate Test Report
        if: always()
        uses: dorny/test-reporter@v1
        continue-on-error: true
        with:
          name: Unit Test Results
          path: target/surefire-reports/*.xml
          reporter: java-junit
          fail-on-error: false
      
      - name: üì§ Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-results
          path: |
            target/surefire-reports/
            target/site/jacoco/
          retention-days: 30
      
      - name: üì¶ Package Application
        run: mvn package -DskipTests -B
      
      - name: üì§ Upload JAR Artifact
        uses: actions/upload-artifact@v4
        with:
          name: application-jar
          path: target/*.jar
          retention-days: 7
  
  # ==========================================
  # JOB 3: INTEGRATION TESTS
  # ==========================================
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: build-and-test
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - name: üì• Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: üîß Setup JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: 'maven'
      
      - name: üîó Run Integration Tests
        run: mvn verify -DskipUnitTests -B
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/testdb
          SPRING_DATASOURCE_USERNAME: test
          SPRING_DATASOURCE_PASSWORD: test
      
      - name: üìä Generate Integration Test Report
        if: always()
        uses: dorny/test-reporter@v1
        continue-on-error: true
        with:
          name: Integration Test Results
          path: target/failsafe-reports/*.xml
          reporter: java-junit
          fail-on-error: false
      
      - name: üì§ Upload Integration Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-results
          path: target/failsafe-reports/
          retention-days: 30
  
  # ==========================================
  # JOB 4: CODE COVERAGE & SONARCLOUD
  # ==========================================
  sonarcloud-analysis:
    name: SonarCloud Quality Analysis
    runs-on: ubuntu-latest
    needs: [build-and-test, integration-tests]
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: testdb
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
      - name: üì• Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: üîß Setup JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: 'maven'
      
      - name: üîç Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      
      - name: üß™ Run All Tests & Generate Coverage
        run: mvn clean verify -B
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/testdb
          SPRING_DATASOURCE_USERNAME: test
          SPRING_DATASOURCE_PASSWORD: test
      
      - name: üìä SonarCloud Analysis
        if: github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn sonar:sonar \
            -Dsonar.projectKey=sivasinc_user-service \
            -Dsonar.organization=sivasinc \
            -Dsonar.host.url=https://sonarcloud.io
        continue-on-error: true
      
      - name: üìà Upload Coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: target/site/jacoco/jacoco.xml
          flags: unittests,integration
          name: codecov-user-service
          fail_ci_if_error: false
      
      - name: üì§ Upload Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: target/site/jacoco/
          retention-days: 30
      
      - name: üìä Coverage Report Summary
        run: |
          echo "================================"
          echo "   CODE COVERAGE SUMMARY"
          echo "================================"
          
          if [ -f target/site/jacoco/index.html ]; then
            echo "‚úÖ Coverage report generated"
            echo ""
            echo "View detailed report in artifacts:"
            echo "- Download 'coverage-report' artifact"
            echo "- Open index.html in browser"
          else
            echo "‚ö†Ô∏è Coverage report not found"
          fi
  
  # ==========================================
  # JOB 5: BUILD SUMMARY
  # ==========================================
  build-summary:
    name: Build Summary
    runs-on: ubuntu-latest
    needs: [code-quality, build-and-test, integration-tests, sonarcloud-analysis]
    if: always()
    
    steps:
      - name: üìä Pipeline Summary
        run: |
          echo "================================"
          echo "   BUILD PIPELINE SUMMARY"
          echo "================================"
          echo ""
          echo "‚úÖ Code Quality: ${{ needs.code-quality.result }}"
          echo "‚úÖ Build & Unit Tests: ${{ needs.build-and-test.result }}"
          echo "‚úÖ Integration Tests: ${{ needs.integration-tests.result }}"
          echo "‚úÖ SonarCloud Analysis: ${{ needs.sonarcloud-analysis.result }}"
          echo ""
          echo "================================"
          echo ""
          echo "üìä View detailed reports:"
          echo "- SonarCloud: https://sonarcloud.io/dashboard?id=sivasinc_user-service"
          echo "- Coverage: Download 'coverage-report' artifact"
          echo "- Security: Download 'owasp-dependency-check-report' artifact"
          echo ""
          
          if [[ "${{ needs.code-quality.result }}" == "success" ]] && \
             [[ "${{ needs.build-and-test.result }}" == "success" ]] && \
             [[ "${{ needs.integration-tests.result }}" == "success" ]]; then
            echo "üéâ BUILD SUCCESSFUL!"
            exit 0
          else
            echo "‚ùå BUILD FAILED!"
            exit 1
          fi

  build-and-test:
    name: Build & Unit Tests
    runs-on: ubuntu-latest
    needs: code-quality
    
    steps:
      - name: üì• Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: üîß Setup JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'
          cache: 'maven'
      
      - name: üî® Build and Run Unit Tests
        run: |
          mvn clean test -B -Dspring.profiles.active=test -e 2>&1 | tee test-output.log
        continue-on-error: true
      
      - name: üîç Display Full Test Errors
        if: always()
        run: |
          echo "================================"
          echo "FULL TEST OUTPUT"
          echo "================================"
          cat test-output.log
          echo ""
          echo "================================"
          echo "SUREFIRE REPORTS"
          echo "================================"
          for file in target/surefire-reports/*.txt; do
            if [ -f "$file" ]; then
              echo "=== $file ==="
              cat "$file"
              echo ""
            fi
          done
      
      - name: üì§ Upload Full Error Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: full-test-logs
          path: |
            test-output.log
            target/surefire-reports/
          retention-days: 7
      
      - name: ‚úÖ Verify Test Success
        if: success()
        run: |
          echo "================================"
          echo "‚úÖ All unit tests passed successfully!"
          echo "================================"
      
      - name: üìä Generate Test Report
        if: always()
        uses: dorny/test-reporter@v1
        continue-on-error: true
        with:
          name: Unit Test Results
          path: target/surefire-reports/*.xml
          reporter: java-junit
          fail-on-error: false
      
      - name: üì§ Upload Unit Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-results
          path: |
            target/surefire-reports/
            target/site/jacoco/
          retention-days: 30
      
      - name: üì¶ Package Application
        if: success()
        run: mvn package -DskipTests -B
      
      - name: üì§ Upload JAR Artifact
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: application-jar
          path: target/*.jar
          retention-days: 7


